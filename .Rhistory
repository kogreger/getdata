library(RMySQL)
install.packages("sqldf")
library(sqldf)
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv ")
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[10,]
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
report <- read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", c(1, 16, 21, 29, 34, 42, 47, 55, 60), header = F, skip = 4)
head(report)
report <- read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", c(2, 16, 21, 29, 34, 42, 47, 55, 60), header = F, skip = 4)
head(report)
report <- read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", c(-1., 9, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3), header = F, skip = 4)
head(report)
sum(v4)
sum(reportv4)
sum(report$v4)
class(report$v4)
class(report$4)
class(report[4])
class(report)
sum(report[4])
sqldf("select distinct AGEP from acs") == nique(acs$AGEP)
sqldf("select distinct AGEP from acs") == unique(acs$AGEP)
gdp <- read.csv("gdp.csv", skip = 5, header = F)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
destfile = "gdp.csv")
gdp <- read.csv("gdp.csv", skip = 5, header = F)
keep = c(1, 2, 4, 5)
gpd <- gdp[keep]
head(gdp, 2)
head(gdp[keep], 2)
gdp <- gdp[keep]
head(gdp, 2)
names(gdp) <- c("code", "rank", "name", "gdp")
head(gdp, 2)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",
destfile = "education.csv")
edu <- read.csv("education.csv")
nrow(gdp)
nrow(edu)
df <- merge(gdp, edu, by.x = "V1", by.y = "CountryCode")
df <- merge(gdp, edu, by.x = "code", by.y = "CountryCode")
nrow(df)
head(df)
nrow(df)
?sort
?merge
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
destfile = "gdp.csv")
gdp <- read.csv("gdp.csv", skip = 5, header = F)
keep = c(1, 2, 4, 5)
gdp <- gdp[keep]
names(gdp) <- c("code", "rank", "name", "gdp")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",
destfile = "education.csv")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",
destfile = "education.csv")
names(gdp)
names(edu)
edu <- read.csv("education.csv")
names(edu)
nrow(gdp)
nrow(edu)
df <- merge(gdp, edu, by.x = "code", by.y = "CountryCode", all = TRUE)
nrow(df)
df <- merge(gdp, edu, by.x = "code", by.y = "CountryCode")
nrow(df)
names(df)
df <- merge(gdp, edu, by.x = "code", by.y = "CountryCode", suffixes = c("gdp", "edu"))
names(df)
head(df, 2)
nrow(gdp)
nrow(edu)
nrow(df)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
destfile = "gdp.csv")
gdp <- read.csv("gdp.csv", skip = 5, header = F)
keep = c(1, 2, 4, 5)
gdp <- gdp[keep]
names(gdp) <- c("code", "rank", "name", "gdp")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",
destfile = "education.csv")
edu <- read.csv("education.csv")
df <- merge(gdp, edu, by.x = "code", by.y = "CountryCode",
suffixes = c("gdp", "edu"))
names(df)
nrow(df)
nrow(gdp)
nrow(edu)
unique(gdp$code)
unique(edu$CountryCode)
?setdiff
setdiff(gdp, edu)
setdiff(gd$codep, edu$CountryCode)
setdiff(gdp$code, edu$CountryCode)
setdiff(edu$CountryCode, gdp$code)
sum(gdp$code %in%edu$CountryCode)
sum(gdp$code %in% edu$CountryCode)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(x, y)
setwd("~/Documents/Coursera/Data Science Specialization/Exploratory Data Analysis/ExData_Plotting1")
data <- read.csv("household_power_consumption.txt",
header = TRUE,
sep = ";",
na.strings = "?",
colClasses = c("character", "character", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric"))
format(object.size(data), units = "auto")
data$datetime <- as.POSIXct(paste(data$Date, data$Time),
format="%d/%m/%Y %H:%M:%S", tz = "GMT")
data <- subset(data, Date == "1/2/2007" | Date == "2/2/2007")
hist(data$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
col = "red")
hist(data$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
col = "red")
dev.print(png, file = "figure/plot1.png", width = 480, height = 480)
?plot
plot(data$datetime, data$Global_active_power, type = "l")
plot(data$datetime, data$Global_active_power,
type = "l".
ylab = "Global Active Power (kilowatts)")
plot(data$datetime, data$Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)")
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = NULL,
ylab = "Global Active Power (kilowatts)")
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = NULL,
ylab = "Global Active Power (kilowatts)")
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = NULL,
ylab = "Global Active Power (kilowatts)")
dev.print(png, file = "figure/plot2.png", width = 480, height = 480)
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = "NULL""",
ylab = "Global Active Power (kilowatts)")
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)")
dev.print(png, file = "figure/plot2.png", width = 480, height = 480)
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$Sub_metering_1)
lines(data$Sub_metering_1)
?lines
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$datetime, data$Sub_metering_1)
lines(data$datetime, data$Sub_metering_2,
col = "red")
lines(data$datetime, data$Sub_metering_3,
col = "blue")
legend("topright",
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
)
legend("topright",
lty = c(1,1),
col = c("black", "red", "blue")
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright",
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$datetime, data$Sub_metering_1)
lines(data$datetime, data$Sub_metering_2,
col = "red")
lines(data$datetime, data$Sub_metering_3,
col = "blue")
legend("topright",
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.print(png, file = "figure/plot3.png", width = 480, height = 480)
legend("topright",
cex=0.7,
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$datetime, data$Sub_metering_1)
lines(data$datetime, data$Sub_metering_2,
col = "red")
lines(data$datetime, data$Sub_metering_3,
col = "blue")
legend("topright",
cex=0.7,
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.print(png, file = "figure/plot3.png", width = 480, height = 480)
names(data)
png(file = "figure/plot3.png", width = 480, height = 480)
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$datetime, data$Sub_metering_1)
lines(data$datetime, data$Sub_metering_2,
col = "red")
lines(data$datetime, data$Sub_metering_3,
col = "blue")
legend("topright",
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
# Plot 1
png(file = "figure/plot1.png", width = 480, height = 480)
hist(data$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
col = "red")
dev.off()
# Plot 2
png(file = "figure/plot2.png", width = 480, height = 480)
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)")
dev.off()
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power")
plot(data$datetime, data$Voltage,
type = "l",
xlab = "datetime",
ylab = "Voltage")
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$datetime, data$Sub_metering_1)
lines(data$datetime, data$Sub_metering_2,
col = "red")
lines(data$datetime, data$Sub_metering_3,
col = "blue")
legend("topright",
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$datetime, data$Sub_metering_1)
lines(data$datetime, data$Sub_metering_2,
col = "red")
lines(data$datetime, data$Sub_metering_3,
col = "blue")
legend("topright",
bty = "n",
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$datetime, data$Global_reactive_power,
type = "l",
xlab = "datetime",
ylab = "Global_reactive_power")
par(mfrow = c(2, 3))
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power")
plot(data$datetime, data$Voltage,
type = "l",
xlab = "datetime",
ylab = "Voltage")
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$datetime, data$Sub_metering_1)
lines(data$datetime, data$Sub_metering_2,
col = "red")
lines(data$datetime, data$Sub_metering_3,
col = "blue")
legend("topright",
bty = "n",
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$datetime, data$Global_reactive_power,
type = "l",
xlab = "datetime",
ylab = "Global_reactive_power")
par(mfrow = c(2, 2))
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power")
plot(data$datetime, data$Voltage,
type = "l",
xlab = "datetime",
ylab = "Voltage")
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$datetime, data$Sub_metering_1)
lines(data$datetime, data$Sub_metering_2,
col = "red")
lines(data$datetime, data$Sub_metering_3,
col = "blue")
legend("topright",
bty = "n",
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$datetime, data$Global_reactive_power,
type = "l",
xlab = "datetime",
ylab = "Global_reactive_power")
png(file = "figure/plot4.png", width = 480, height = 480)
par(mfrow = c(2, 2))
plot(data$datetime, data$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power")
plot(data$datetime, data$Voltage,
type = "l",
xlab = "datetime",
ylab = "Voltage")
plot(data$datetime, data$Sub_metering_1,
type = "n",
xlab = "",
ylab = "Energy sub metering")
lines(data$datetime, data$Sub_metering_1)
lines(data$datetime, data$Sub_metering_2,
col = "red")
lines(data$datetime, data$Sub_metering_3,
col = "blue")
legend("topright",
bty = "n",
lty = c(1,1),
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$datetime, data$Global_reactive_power,
type = "l",
xlab = "datetime",
ylab = "Global_reactive_power")
dev.off()
source('~/Documents/Coursera/Data Science Specialization/Exploratory Data Analysis/ExData_Plotting1/plot1.R')
setwd("~/Documents/Coursera/Data Science Specialization/Getting and Cleaning Data/getdata/")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "acs2006idaho.csv", method = "curl")
acs2006idago <- read.csv("acs2006idaho.csv", header = T)
table(acs2006idaho[, c("TYPE", "VAL")])
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "acs2006idaho.csv", method = "curl")
acs2006idago <- read.csv("acs2006idaho.csv", header = T)
table(acs2006idaho[, c("TYPE", "VAL")])
acs2006idaho <- read.csv("acs2006idaho.csv", header = T)
table(acs2006idaho[, c("TYPE", "VAL")])
head(acs2006idaho$FES)
library(xlsx)
install.packages("xlsx")
library(xlsx)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
download.file(fileURL, destfile = "natgas_ap.xlsx", method = "curl")
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xlsx("natgas_ap.xlsx",
sheetIndex = 1,
header = TRUE,
colIndex = colIndex,
rowIndex = rowIndex)
sum(dat$Zip * dat$Ext, na.rm = TRUE)
install.packages("XML")
library(XML)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
baltimore <- xmlTreeParse(fileURL, useInternal = TRUE)
rootNode <- xmlRoot(baltimore)
table(xpathSApply(rootNode, "//zipcode", xmlValue))
install.packages("data.table")
library(data.table)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
DT <- fread(fileURL, sep = ",")
names(DT)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
#system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
#system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
#system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
#system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
#system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
#system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15, DT$SEX, mean))
system.time(sapply(split(DT$pwgtp15, DT$SEX), mean))
#system.time(mean(DT[DT$SEX == 1, ]$pwgtp15); mean(DT[DT$SEX == 2, ]$pwgtp15))
#system.time(rowMeans(DT)[DT$SEX == 1]; rowMeans(DT)[DT$SEX == 2])
system.time(DT[, mean(pwgtp15), by=SEX])
system.time(mean(DT$pwgtp15, by=DT$SEX))
system.time(mean(DT$pwgtp15, by = DT$SEX))
system.time(DT[, mean(pwgtp15), by = SEX])
system.time(sapply(split(DT$pwgtp15, DT$SEX), mean))
system.time(tapply(DT$pwgtp15, DT$SEX, mean))
system.time(mean(DT$pwgtp15, by = DT$SEX))
mean(DT$pwgtp15, by = DT$SEX)
DT[, mean(pwgtp15), by = SEX]
sapply(split(DT$pwgtp15, DT$SEX), mean)
tapply(DT$pwgtp15, DT$SEX, mean)
mean(DT$pwgtp15, by = DT$SEX)
system.time(tapply(DT$pwgtp15, DT$SEX, mean))
system.time(sapply(split(DT$pwgtp15, DT$SEX), mean))
system.time(DT[, mean(pwgtp15), by = SEX])
system.time(tapply(DT$pwgtp15, DT$SEX, mean))
system.time(sapply(split(DT$pwgtp15, DT$SEX), mean))
system.time(DT[, mean(pwgtp15), by = SEX])
install.packages("sqldf")
library(sqldf)
acs <- read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs") == unique(acs$AGEP)
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
report <- read.fwf("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
c(-1., 9, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3),
header = F,
skip = 4)
head(report)
sum(report[4])
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",
destfile = "acs2006idaho_microdata.csv")
acs <- read.csv("acs2006idaho_microdata.csv")
agricultureLogical <- ifelse(acs$ACR == 3 & acs$AGS == 6, TRUE, FALSE)
sum(agricultureLogical, na.rm = TRUE)
head(which(agricultureLogical), 3)
install.packages("jpeg")
library(jpeg)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",
destfile = "getdata_jeff.jpeg")
jeffJpeg <- readJPEG("getdata_jeff.jpeg", native = TRUE)
quantile(jeffJpeg, c(0.3, 0.8))
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
destfile = "gdp.csv")
gdp <- read.csv("gdp.csv", skip = 5, header = F)
keep = c(1, 2, 4, 5)
gdp <- gdp[keep]
names(gdp) <- c("code", "rank", "name", "gdp")
gdp$rank <- as.character(gdp$rank)
gdp <- gdp[grep("^([0-9]+)$", gdp$rank), ]
gdp$rank <- as.numeric(gdp$rank)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",
destfile = "education.csv")
edu <- read.csv("education.csv")
df <- merge(gdp, edu, by.x = "code", by.y = "CountryCode")
nrow(df)
library(plyr)
df <- arrange(df, desc(rank))
df[13, c("rank", "name")]
tail(df, 2)
tapply(df$rank, df$Income.Group, mean)
install.packages("Hmisc")
library(Hmisc)
df$group <- cut2(df$rank, g = 5)
xtabs( ~ group + Income.Group, data = df)
